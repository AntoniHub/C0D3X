# This workflow is an example of DevOps practices applied in daily testing.
# The main feature of this WorkFlow is Figlet, an ascii art on these executions.

# ===============================================
# Yo can see some of my skills on my sites:      |
# https://www.linkedin.com/in/arodriguezfarias/  |
# https://rodriguezfarias.com/                   |
# ==============================================

name: QA Engineer | Antonio Rodriguez Farias

on:
  #schedule:
    #- cron: '*/10 * * * *'
  workflow_dispatch:

jobs:
  test_figlet:
    #if: github.event.schedule == '*/10 * * * *'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    defaults:
      run:
        working-directory: Jenkins-CI
    env:
      GH_TOKEN: ${{ secrets.PAT }}
      API_KEY: ${{ secrets.API_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: test1

      - name: Install & Run Figlet
        run: |
          sudo apt install -y figlet
          figlet -c Antonio Rodriguez > file.txt
          date >> file.txt

      - name: Upload Figlet File
        uses: actions/upload-artifact@v4
        with:
          name: file
          path: Jenkins-CI/file.txt

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.PAT }}
          commit-message: "QA Engineer | Antonio Rodriguez Farias"
          committer: |
            AntoniHub <abgrodriguezfarias@gmail.com>,
            paRRbot-code <antonio+4@rodriguezfarias.com>
          author: AntoniHub <abgrodriguezfarias@gmail.com>
          branch: master
          base: test1
          title: |
            :wave: Hi, I am @AntoniHub

            🚀 About me
            Software QA Engineer with experience in Frontend, Backend, Continuous Integration, Databases (SQL and NoSQL), UX/UI, Mobile, Architecture, Linux / macOS / Windows testing.

            📊 Master Degree in Big Data - Catholic University of Avila
            🔒 Post Graduate Diploma in Defensive Cybersecurity
            💡 Diploma in Machine Learning | AI applied to Business
            📌 Continuous Testing with GitHub Actions
            📌 API Testing with Postman & Python
            📌 Frontend Testing with Selenium WebDriver
            📌 Backend Testing with Pytest, SQL & NoSQL
            📌 Linux Testing with Vagrant & VirtualBox
            📌 Mobile Testing with Android SDK & iOS
            📝 I write in depth on my website about myself [rodriguezfarias.com](https://rodriguezfarias.com/)
          labels: automerge

      #- name: GH Create PR
        #run: gh pr create --base master --head test --title "QA Engineer | Antonio Rodriguez" --body "QA Engineer | Antonio Rodriguez Farias."

      - name: Enable Pull Request Automerge
        if: steps.cpr.outputs.pull-request-operation == 'created'
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.PAT }}
          pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
          merge-method: squash
